.. _bluegreen:

.. title:: Blue/Green Deployment

Blue/Green Deployment
=====================

.. toctree::
    :maxdepth: 2

How to Blue/green in GHOST (initial build)
******************************************

1. Prepare your env resources : **2 ASG, 1 main ELB attached to the first 'blue' ASG**. Plus if necessary 2 SGs and 2 IAM Instance Profiles.
2. Build and deploy your main Ghost App (future ``blue`` one)
3. Edit your App and check ``Enable Blue/Green deployment`` on it. Ghost will clone your app to generate the ``green`` one. At this point the original app becomes ``blue`` and is marked as ``online``.
4. Edit the green app and attach needed green resources (a different ASG is *mandatory*)
5. Trigger the ``preparebluegreen`` command in order to creates a temporary warmup ELB and start some new instances in the ``offline (green)`` pool.
6. Use classical ``buildimage`` and ``deploy`` to prepare your N+1 version in the ``offline (green)`` pool. You can validate your ``green`` env with the temporary ELB generated by the ``prepare`` command.
7. When ready for ``blue/green`` deploy, trigger the ``swapbluegreen`` command to make the swap ! There will be two strategies available:

    * ``isolated``: instances from the online pool are detached from the ELB, waiting for connection draining and then attach instances from the new pool to the ELB. *âš  A downtime will occur with this strategy, but it insures that the N version and N+1 version are never online together.*
    * ``overlap``:  a contrario, this strategy will first detach online instances(they stay ``healthy`` until the Unhealthy threshold is reached and they continue to receive the trafic), then attach the instances form the new pool (N+1 version), wait for them to be ``healthy`` in the ELB. There is no downtime with this strategy but the two versions can be online at the same time during few seconds.

8. If there is any problem with ``swap`` deploy, it's possible to run swap again in order to ``rollback``
9. When everything is fully tested and online, you can run ``purgebluegreen`` to destroy the old pool of instances and destroy the temporary ELB.
10. Back to step 5 in order to deploy another version of your app !

For more information, please refer to :ref:`commands` page.


How to activate Blue/green in GHOST with a production application 
*****************************************************************

1. Create new autoscaling group (if necessary one SG and one IAM role) with terraform for the new cluster. (futur green app group)
2. Activate blue/green option on the ghost app. (Blue will be the actual production and green the new cluster)
3. With ressource details of the blue app, check all running instance and tag them with color:blue on aws console.
4. Run updatelifecyclehook on blue app.
5. Run updateAutoScaling on blue app.
6. Deploy at least one module on blue app.
7. In the green application change the autoscaling group.
8. Run updatelifecyclehook on green app.
9. Run updateAutoScaling on green app.
10. Follow the classic procedure as describe above from step 5.